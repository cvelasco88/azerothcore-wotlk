<?php

namespace app\models\traits\spell;

trait SpellAttrsEx3Trait
{
    const SPELL_ATTR3_NONE = 0x00000000;
    const SPELL_ATTR3_PVP_ENABLING = 0x00000001;
    const SPELL_ATTR3_NO_PROC_EQUIP_REQUIREMENT = 0x00000002;
    const SPELL_ATTR3_NO_CASTING_BAR_TEXT = 0x00000004;
    const SPELL_ATTR3_COMPLETELY_BLOCKED = 0x00000008;
    const SPELL_ATTR3_NO_RES_TIMER = 0x00000010;
    const SPELL_ATTR3_NO_DURABILTIY_LOSS = 0x00000020;
    const SPELL_ATTR3_NO_AVOIDANCE = 0x00000040;
    const SPELL_ATTR3_DOT_STACKING_RULE = 0x00000080;
    const SPELL_ATTR3_ONLY_ON_PLAYER = 0x00000100;
    const SPELL_ATTR3_NOT_A_PROC = 0x00000200;
    const SPELL_ATTR3_REQUIRES_MAIN_HAND_WEAPON = 0x00000400;
    const SPELL_ATTR3_ONLY_BATTLEGROUNDS = 0x00000800;
    const SPELL_ATTR3_ONLY_ON_GHOSTS = 0x00001000;
    const SPELL_ATTR3_HIDE_CHANNEL_BAR = 0x00002000;
    const SPELL_ATTR3_HIDE_IN_RAID_FILTER = 0x00004000;
    const SPELL_ATTR3_NORMAL_RANGED_ATTACK = 0x00008000;
    const SPELL_ATTR3_SUPPRESS_CASTER_PROCS = 0x00010000;
    const SPELL_ATTR3_SUPPRESS_TARGET_PROCS = 0x00020000;
    const SPELL_ATTR3_ALWAYS_HIT = 0x00040000;
    const SPELL_ATTR3_INSTANT_TARGET_PROCS = 0x00080000;
    const SPELL_ATTR3_ALLOW_AURA_WHILE_DEAD = 0x00100000;
    const SPELL_ATTR3_ONLY_PROC_OUTDOORS = 0x00200000;
    const SPELL_ATTR3_DO_NOT_TRIGGER_TARGET_STAND = 0x00400000;
    const SPELL_ATTR3_NO_DAMAGE_HISTORY = 0x00800000;
    const SPELL_ATTR3_REQUIRES_OFF_HAND_WEAPON = 0x01000000;
    const SPELL_ATTR3_TREAT_AS_PERIODIC = 0x02000000;
    const SPELL_ATTR3_CAN_PROC_FROM_PROCS = 0x04000000;
    const SPELL_ATTR3_ONLY_PROC_ON_CASTER = 0x08000000;
    const SPELL_ATTR3_IGNORE_CASTER_AND_TARGET_RESTRICTIONS = 0x10000000;
    const SPELL_ATTR3_IGNORE_CASTER_MODIFIERS = 0x20000000;
    const SPELL_ATTR3_DO_NOT_DISPLAY_RANGE = 0x40000000;
    const SPELL_ATTR3_NOT_ON_AOE_IMMUNE = 0x80000000;

    /**
     * Get the list of spell attributes with their names.
     *
     * @return array
     */
    public static function getSpellAttributesEx3Options()
    {
        return [
            self::SPELL_ATTR3_NONE => 'NONE',
            self::SPELL_ATTR3_PVP_ENABLING => 'PVP_ENABLING',
            self::SPELL_ATTR3_NO_PROC_EQUIP_REQUIREMENT => 'NO_PROC_EQUIP_REQUIREMENT',
            self::SPELL_ATTR3_NO_CASTING_BAR_TEXT => 'NO_CASTING_BAR_TEXT',
            self::SPELL_ATTR3_COMPLETELY_BLOCKED => 'COMPLETELY_BLOCKED',
            self::SPELL_ATTR3_NO_RES_TIMER => 'NO_RES_TIMER',
            self::SPELL_ATTR3_NO_DURABILTIY_LOSS => 'NO_DURABILTIY_LOSS',
            self::SPELL_ATTR3_NO_AVOIDANCE => 'NO_AVOIDANCE',
            self::SPELL_ATTR3_DOT_STACKING_RULE => 'DOT_STACKING_RULE',
            self::SPELL_ATTR3_ONLY_ON_PLAYER => 'ONLY_ON_PLAYER',
            self::SPELL_ATTR3_NOT_A_PROC => 'NOT_A_PROC',
            self::SPELL_ATTR3_REQUIRES_MAIN_HAND_WEAPON => 'REQUIRES_MAIN_HAND_WEAPON',
            self::SPELL_ATTR3_ONLY_BATTLEGROUNDS => 'ONLY_BATTLEGROUNDS',
            self::SPELL_ATTR3_ONLY_ON_GHOSTS => 'ONLY_ON_GHOSTS',
            self::SPELL_ATTR3_HIDE_CHANNEL_BAR => 'HIDE_CHANNEL_BAR',
            self::SPELL_ATTR3_HIDE_IN_RAID_FILTER => 'HIDE_IN_RAID_FILTER',
            self::SPELL_ATTR3_NORMAL_RANGED_ATTACK => 'NORMAL_RANGED_ATTACK',
            self::SPELL_ATTR3_SUPPRESS_CASTER_PROCS => 'SUPPRESS_CASTER_PROCS',
            self::SPELL_ATTR3_SUPPRESS_TARGET_PROCS => 'SUPPRESS_TARGET_PROCS',
            self::SPELL_ATTR3_ALWAYS_HIT => 'ALWAYS_HIT',
            self::SPELL_ATTR3_INSTANT_TARGET_PROCS => 'INSTANT_TARGET_PROCS',
            self::SPELL_ATTR3_ALLOW_AURA_WHILE_DEAD => 'ALLOW_AURA_WHILE_DEAD',
            self::SPELL_ATTR3_ONLY_PROC_OUTDOORS => 'ONLY_PROC_OUTDOORS',
            self::SPELL_ATTR3_DO_NOT_TRIGGER_TARGET_STAND => 'DO_NOT_TRIGGER_TARGET_STAND',
            self::SPELL_ATTR3_NO_DAMAGE_HISTORY => 'NO_DAMAGE_HISTORY',
            self::SPELL_ATTR3_REQUIRES_OFF_HAND_WEAPON => 'REQUIRES_OFF_HAND_WEAPON',
            self::SPELL_ATTR3_TREAT_AS_PERIODIC => 'TREAT_AS_PERIODIC',
            self::SPELL_ATTR3_CAN_PROC_FROM_PROCS => 'CAN_PROC_FROM_PROCS',
            self::SPELL_ATTR3_ONLY_PROC_ON_CASTER => 'ONLY_PROC_ON_CASTER',
            self::SPELL_ATTR3_IGNORE_CASTER_AND_TARGET_RESTRICTIONS => 'IGNORE_CASTER_AND_TARGET_RESTRICTIONS',
            self::SPELL_ATTR3_IGNORE_CASTER_MODIFIERS => 'IGNORE_CASTER_MODIFIERS',
            self::SPELL_ATTR3_DO_NOT_DISPLAY_RANGE => 'DO_NOT_DISPLAY_RANGE',
            self::SPELL_ATTR3_NOT_ON_AOE_IMMUNE => 'NOT_ON_AOE_IMMUNE',
            // Add more options as needed
        ];
    }

    /**
     * Get the name for a specific spell attribute.
     *
     * @param int $attribute
     * @return string|null
     */
    public static function getSpellAttributesEx3Name($attribute)
    {
        $spellAttributes = self::getSpellAttributesEx3Options();
        return isset($spellAttributes[$attribute]) ? $spellAttributes[$attribute] : null;
    }
}
