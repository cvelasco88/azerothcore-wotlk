<?php

namespace app\models\traits\spell;

trait SpellAttrsEx2Trait
{
    const SPELL_ATTR2_ALLOW_DEAD_TARGET = 0x00000001;
    const SPELL_ATTR2_NO_SHAPESHIFT_UI = 0x00000002;
    const SPELL_ATTR2_IGNORE_LINE_OF_SIGHT = 0x00000004;
    const SPELL_ATTR2_ALLOW_LOW_LEVEL_BUFF = 0x00000008;
    const SPELL_ATTR2_USE_SHAPESHIFT_BAR = 0x00000010;
    const SPELL_ATTR2_AUTO_REPEAT = 0x00000020;
    const SPELL_ATTR2_CANNOT_CAST_ON_TAPPED = 0x00000040;
    const SPELL_ATTR2_DO_NOT_REPORT_SPELL_FAILURE = 0x00000080;
    const SPELL_ATTR2_INCLUDE_IN_ADVANCED_COMBAT_LOG = 0x00000100;
    const SPELL_ATTR2_ALWAYS_CAST_AS_UNIT = 0x00000200;
    const SPELL_ATTR2_SPECIAL_TAMING_FLAG = 0x00000400;
    const SPELL_ATTR2_NO_TARGET_PER_SECOND_COSTS = 0x00000800;
    const SPELL_ATTR2_CHAIN_FROM_CASTER = 0x00001000;
    const SPELL_ATTR2_ENCHANT_OWN_ITEM_ONLY = 0x00002000;
    const SPELL_ATTR2_ALLOW_WHILE_INVISIBLE = 0x00004000;
    const SPELL_ATTR2_DO_NOT_CONSUME_IF_GAINED_DURING_CAST = 0x00008000;
    const SPELL_ATTR2_NO_ACTIVE_PETS = 0x00010000;
    const SPELL_ATTR2_DO_NOT_RESET_COMBAT_TIMERS = 0x00020000;
    const SPELL_ATTR2_NO_JUMP_WHILE_CAST_PENDING = 0x00040000;
    const SPELL_ATTR2_ALLOW_WHILE_NOT_SHAPESHIFTED_CASTER_FORM = 0x00080000;
    const SPELL_ATTR2_INITIATE_COMBAT_POST_CAST_ENABLES_AUTO_ATTACK = 0x00100000;
    const SPELL_ATTR2_FAIL_ON_ALL_TARGETS_IMMUNE = 0x00200000;
    const SPELL_ATTR2_NO_INITIAL_THREAT = 0x00400000;
    const SPELL_ATTR2_PROC_COOLDOWN_ON_FAILURE = 0x00800000;
    const SPELL_ATTR2_ITEM_CAST_WITH_OWNER_SKILL = 0x01000000;
    const SPELL_ATTR2_DONT_BLOCK_MANA_REGEN = 0x02000000;
    const SPELL_ATTR2_NO_SCHOOL_IMMUNITIES = 0x04000000;
    const SPELL_ATTR2_IGNORE_WEAPONSKILL = 0x08000000;
    const SPELL_ATTR2_NOT_AN_ACTION = 0x10000000;
    const SPELL_ATTR2_CANT_CRIT = 0x20000000;
    const SPELL_ATTR2_ACTIVE_THREAT = 0x40000000;
    const SPELL_ATTR2_RETAIN_ITEM_CAST = 0x80000000;

    /**
     * Get the list of spell attributes with their names.
     *
     * @return array
     */
    public static function getSpellAttributesEx2Options()
    {
        return [
            self::SPELL_ATTR2_ALLOW_DEAD_TARGET => 'ALLOW_DEAD_TARGET',
            self::SPELL_ATTR2_NO_SHAPESHIFT_UI => 'NO_SHAPESHIFT_UI',
            self::SPELL_ATTR2_IGNORE_LINE_OF_SIGHT => 'IGNORE_LINE_OF_SIGHT',
            self::SPELL_ATTR2_ALLOW_LOW_LEVEL_BUFF => 'ALLOW_LOW_LEVEL_BUFF',
            self::SPELL_ATTR2_USE_SHAPESHIFT_BAR => 'USE_SHAPESHIFT_BAR',
            self::SPELL_ATTR2_AUTO_REPEAT => 'AUTO_REPEAT',
            self::SPELL_ATTR2_CANNOT_CAST_ON_TAPPED => 'CANNOT_CAST_ON_TAPPED',
            self::SPELL_ATTR2_DO_NOT_REPORT_SPELL_FAILURE => 'DO_NOT_REPORT_SPELL_FAILURE',
            self::SPELL_ATTR2_INCLUDE_IN_ADVANCED_COMBAT_LOG => 'INCLUDE_IN_ADVANCED_COMBAT_LOG',
            self::SPELL_ATTR2_ALWAYS_CAST_AS_UNIT => 'ALWAYS_CAST_AS_UNIT',
            self::SPELL_ATTR2_SPECIAL_TAMING_FLAG => 'SPECIAL_TAMING_FLAG',
            self::SPELL_ATTR2_NO_TARGET_PER_SECOND_COSTS => 'NO_TARGET_PER_SECOND_COSTS',
            self::SPELL_ATTR2_CHAIN_FROM_CASTER => 'CHAIN_FROM_CASTER',
            self::SPELL_ATTR2_ENCHANT_OWN_ITEM_ONLY => 'ENCHANT_OWN_ITEM_ONLY',
            self::SPELL_ATTR2_ALLOW_WHILE_INVISIBLE => 'ALLOW_WHILE_INVISIBLE',
            self::SPELL_ATTR2_DO_NOT_CONSUME_IF_GAINED_DURING_CAST => 'DO_NOT_CONSUME_IF_GAINED_DURING_CAST',
            self::SPELL_ATTR2_NO_ACTIVE_PETS => 'NO_ACTIVE_PETS',
            self::SPELL_ATTR2_DO_NOT_RESET_COMBAT_TIMERS => 'DO_NOT_RESET_COMBAT_TIMERS',
            self::SPELL_ATTR2_NO_JUMP_WHILE_CAST_PENDING => 'NO_JUMP_WHILE_CAST_PENDING',
            self::SPELL_ATTR2_ALLOW_WHILE_NOT_SHAPESHIFTED_CASTER_FORM => 'ALLOW_WHILE_NOT_SHAPESHIFTED_CASTER_FORM',
            self::SPELL_ATTR2_INITIATE_COMBAT_POST_CAST_ENABLES_AUTO_ATTACK => 'INITIATE_COMBAT_POST_CAST_ENABLES_AUTO_ATTACK',
            self::SPELL_ATTR2_FAIL_ON_ALL_TARGETS_IMMUNE => 'FAIL_ON_ALL_TARGETS_IMMUNE',
            self::SPELL_ATTR2_NO_INITIAL_THREAT => 'NO_INITIAL_THREAT',
            self::SPELL_ATTR2_PROC_COOLDOWN_ON_FAILURE => 'PROC_COOLDOWN_ON_FAILURE',
            self::SPELL_ATTR2_ITEM_CAST_WITH_OWNER_SKILL => 'ITEM_CAST_WITH_OWNER_SKILL',
            self::SPELL_ATTR2_DONT_BLOCK_MANA_REGEN => 'DONT_BLOCK_MANA_REGEN',
            self::SPELL_ATTR2_NO_SCHOOL_IMMUNITIES => 'NO_SCHOOL_IMMUNITIES',
            self::SPELL_ATTR2_IGNORE_WEAPONSKILL => 'IGNORE_WEAPONSKILL',
            self::SPELL_ATTR2_NOT_AN_ACTION => 'NOT_AN_ACTION',
            self::SPELL_ATTR2_CANT_CRIT => 'CANT_CRIT',
            self::SPELL_ATTR2_ACTIVE_THREAT => 'ACTIVE_THREAT',
            self::SPELL_ATTR2_RETAIN_ITEM_CAST => 'RETAIN_ITEM_CAST',
            // Add more options as needed
        ];
    }

    /**
     * Get the name for a specific spell attribute.
     *
     * @param int $attribute
     * @return string|null
     */
    public static function getSpellAttributesEx2Name($attribute)
    {
        $spellAttributes = self::getSpellAttributesEx2Options();
        return isset($spellAttributes[$attribute]) ? $spellAttributes[$attribute] : null;
    }
}
